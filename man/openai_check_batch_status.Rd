% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/openai-batch.R
\name{openai_check_batch_status}
\alias{openai_check_batch_status}
\title{Check the Status of a Message Batch Using the OpenAI API}
\usage{
openai_check_batch_status(
  batch_response,
  max_retries = 3,
  pause_cap = 1200,
  quiet = FALSE
)
}
\arguments{
\item{batch_response}{A \code{list} returned by \code{\link[=openai_batch_job]{openai_batch_job()}} containing
the batch details. Alternatively, pass an object from
\code{\link[=openai_list_batches]{openai_list_batches()}}, such as \code{openai_list_batches()$data[[1]]}.}

\item{max_retries}{An integer specifying the maximum number of retry attempts
in case of request failures. Defaults to \code{3}.}

\item{pause_cap}{A numeric value representing the maximum pause duration (in
seconds) between retries. Defaults to \code{1200}.}

\item{quiet}{A logical value indicating whether to suppress log messages
during retries. Defaults to \code{FALSE}.}
}
\value{
A \code{list} containing detailed information about the specified message
batch. The fields in the result include:
\itemize{
\item \strong{\code{id}}: A unique identifier for the batch.
\item \strong{\code{object}}: The type of object returned (e.g., \code{"batch"}).
\item \strong{\code{endpoint}}: The API endpoint used for the batch.
\item \strong{\code{errors}}: A list of errors encountered during processing, if any.
\item \strong{\code{input_file_id}}: The ID of the file containing input data for the batch.
\item \strong{\code{completion_window}}: The time window for completing the batch (e.g., \code{"24h"}).
\item \strong{\code{status}}: The current processing status of the batch (e.g., \code{"completed"}, \code{"in_progress"}, \code{"failed"}).
\item \strong{\code{output_file_id}}: The ID of the file containing the batch's completed output.
\item \strong{\code{error_file_id}}: The ID of the file containing error logs, if available.
\item \strong{\code{created_at}}: A UNIX timestamp indicating when the batch was created.
\item \strong{\code{in_progress_at}}: A UNIX timestamp indicating when processing began.
\item \strong{\code{expires_at}}: A UNIX timestamp indicating when the batch will expire.
\item \strong{\code{finalizing_at}}: A UNIX timestamp indicating when the batch began finalization.
\item \strong{\code{completed_at}}: A UNIX timestamp indicating when the batch was completed.
\item \strong{\code{failed_at}}: A UNIX timestamp indicating when the batch failed, if applicable.
\item \strong{\code{expired_at}}: A UNIX timestamp indicating when the batch expired, if applicable.
\item \strong{\code{cancelling_at}}: A UNIX timestamp indicating when the batch began cancellation, if applicable.
\item \strong{\code{cancelled_at}}: A UNIX timestamp indicating when the batch was cancelled, if applicable.
\item \strong{\code{request_counts}}: A summary of request counts in the batch:
\itemize{
\item \strong{\code{total}}: Total number of requests in the batch.
\item \strong{\code{completed}}: Number of successfully completed requests.
\item \strong{\code{failed}}: Number of failed requests.
}
\item \strong{\code{metadata}}: Additional metadata about the batch, including:
\itemize{
\item \strong{\code{customer_id}}: A customer-provided identifier for tracking (e.g., \code{"user_123456789"}).
\item \strong{\code{batch_description}}: A description of the batch (e.g., \code{"Nightly eval job"}).
}
}
}
\description{
This function retrieves details about a specific message batch using the
OpenAI API. It is used to poll the status of a batch, monitor its progress,
or retrieve associated metadata.
}
\details{
This function uses the \href{https://platform.openai.com/docs/api-reference/batch}{OpenAI Batch API} to retrieve
detailed status information for a batch. The \code{status} field can indicate one
of several states, such as \code{"in_progress"}, \code{"completed"}, or \code{"failed"}.
}
\seealso{
\itemize{
\item \code{\link[=openai_batch_job]{openai_batch_job()}} for batch creation.
\item \code{\link[=openai_download_batch_results]{openai_download_batch_results()}} for retrieving completed results.
\item \code{\link[=openai_list_batches]{openai_list_batches()}} for listing existing batches.
}

Other openai: 
\code{\link{openai_batch_job}()},
\code{\link{openai_cancel_batch}()},
\code{\link{openai_create_assistant}()},
\code{\link{openai_create_message}()},
\code{\link{openai_create_run}()},
\code{\link{openai_create_thread}()},
\code{\link{openai_create_vector_store}()},
\code{\link{openai_create_vector_store_file}()},
\code{\link{openai_create_vector_store_file_batch}()},
\code{\link{openai_download_batch_results}()},
\code{\link{openai_list_batches}()},
\code{\link{openai_list_run_steps}()},
\code{\link{openai_poll_and_download}()},
\code{\link{openai_single_request}()},
\code{\link{openai_submit_tool_outputs}()},
\code{\link{openai_upload_file}()}

Other batch: 
\code{\link{batch_job}()},
\code{\link{call_batch_api}()},
\code{\link{cancel_batch}()},
\code{\link{check_batch_status}()},
\code{\link{claude_batch_job}()},
\code{\link{claude_cancel_batch}()},
\code{\link{claude_check_batch_status}()},
\code{\link{claude_download_batch_results}()},
\code{\link{claude_list_batches}()},
\code{\link{claude_poll_and_download}()},
\code{\link{download_results}()},
\code{\link{list_batches}()},
\code{\link{openai_batch_job}()},
\code{\link{openai_cancel_batch}()},
\code{\link{openai_download_batch_results}()},
\code{\link{openai_list_batches}()},
\code{\link{openai_poll_and_download}()},
\code{\link{poll_and_download}()}
}
\concept{batch}
\concept{openai}
