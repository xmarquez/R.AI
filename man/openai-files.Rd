% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/openai-files.R
\name{openai_upload_file}
\alias{openai_upload_file}
\alias{openai_list_files}
\alias{openai_file_details}
\alias{openai_delete_file}
\alias{openai_download_file}
\title{Upload, List, Retrieve, Delete, or Download Files in OpenAI}
\usage{
openai_upload_file(file_path, purpose = "assistants")

openai_list_files()

openai_file_details(file_id)

openai_delete_file(file_id)

openai_download_file(file_id, destination)
}
\arguments{
\item{file_path}{Character. The path to the file to upload.}

\item{purpose}{Character. The purpose of the file. Must be one of "batch",
"fine-tune", "assistants", or "vision". Default is "assistants".}

\item{file_id}{Character. The ID of the file to retrieve, delete, or
download.}

\item{destination}{Character. The local path to save the downloaded file.}
}
\value{
For \code{openai_upload_file}, a list containing the details of the
uploaded file with fields:
\itemize{
\item \code{id}: string. The file identifier.
\item \code{bytes}: integer. Size of the file in bytes.
\item \code{created_at}: integer. Unix timestamp for file creation.
\item \code{filename}: string. Name of the file.
\item \code{object}: string. Object type, always "file".
\item \code{purpose}: string. Intended purpose of the file.
\item \code{status}: Deprecated. Current status of the file.
\item \code{status_details}: Deprecated. Details on validation failures.
}

For \code{openai_list_files}, a list of uploaded file objects.

For \code{openai_file_details}, the details of a specific file.

For \code{openai_delete_file}, a list containing the deletion status.

For \code{openai_download_file}, NULL. Saves the file to the specified location.
}
\description{
These functions interact with the OpenAI \href{https://platform.openai.com/docs/api-reference/files}{Files API}. See the
documentation there for more.
}
\details{
\itemize{
\item Individual files can be up to 512 MB. The total size of files uploaded by one organization can be up to 100 GB.
\item The Assistants API supports files up to 2 million tokens and specific file types. See the \href{https://platform.openai.com/docs/assistants/tools}{Assistants Tools guide} for details.
\item The Fine-tuning API only supports .jsonl files. See \href{https://platform.openai.com/docs/api-reference/fine-tuning/chat-input}{chat} or \href{https://platform.openai.com/docs/api-reference/fine-tuning/completions-input}{completions} formats.
\item The Batch API supports .jsonl files up to 200 MB in size. See the \href{https://platform.openai.com/docs/api-reference/batch/request-input}{required format}.
}
}
\seealso{
Other openai: 
\code{\link{openai_batch_job}()},
\code{\link{openai_cancel_batch}()},
\code{\link{openai_check_batch_status}()},
\code{\link{openai_create_assistant}()},
\code{\link{openai_create_message}()},
\code{\link{openai_create_run}()},
\code{\link{openai_create_thread}()},
\code{\link{openai_create_vector_store}()},
\code{\link{openai_create_vector_store_file}()},
\code{\link{openai_create_vector_store_file_batch}()},
\code{\link{openai_download_batch_results}()},
\code{\link{openai_list_batches}()},
\code{\link{openai_list_run_steps}()},
\code{\link{openai_poll_and_download}()},
\code{\link{openai_submit_tool_outputs}()}

Other files: 
\code{\link{openai_create_vector_store_file}()},
\code{\link{openai_create_vector_store_file_batch}()},
\code{\link{openai_download_batch_results}()}
}
\concept{files}
\concept{openai}
