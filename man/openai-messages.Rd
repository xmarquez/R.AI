% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/openai-messages.R
\name{openai_create_message}
\alias{openai_create_message}
\alias{openai_list_messages}
\alias{openai_get_message}
\alias{openai_modify_message}
\alias{openai_delete_message}
\title{Create, list, update, retrieve, or delete Messages in a Thread in OpenAI}
\usage{
openai_create_message(
  thread_id,
  role,
  content,
  attachments = NULL,
  metadata = NULL
)

openai_list_messages(
  thread_id,
  limit = 20,
  order = "desc",
  after = NULL,
  before = NULL,
  run_id = NULL
)

openai_get_message(thread_id, message_id)

openai_modify_message(thread_id, message_id, metadata = NULL)

openai_delete_message(thread_id, message_id)
}
\arguments{
\item{thread_id}{Character. Required. The ID of the thread the message
belongs to.}

\item{role}{Character. Required for message creation. The role of the entity
creating the message. Allowed values are \code{"user"} or \code{"assistant"}.}

\item{content}{Character or List. Required for message creation. The content
of the message. Can be a string or an array of text and/or images.}

\item{attachments}{List or \code{NULL}. Optional. A list of files attached to the
message and the tools they should be added to.}

\item{metadata}{List. Optional. A set of key-value pairs to attach to the
message or modify its existing metadata. Keys can be a maximum of 64
characters long, and values can be a maximum of 512 characters long.}

\item{limit}{Integer. Optional. A limit on the number of objects to return.
Defaults to 20, with a maximum of 100.}

\item{order}{Character. Optional. Sort order by the \code{created_at} timestamp.
Defaults to \code{"desc"} for descending order. Use \code{"asc"} for ascending order.}

\item{after}{Character. Optional. A cursor for pagination to fetch results
after this ID.}

\item{before}{Character. Optional. A cursor for pagination to fetch results
before this ID.}

\item{run_id}{Character. Optional. Filter messages by the run ID that
generated them.}

\item{message_id}{Character. Optional. The ID of the message to retrieve,
modify, or delete.}
}
\value{
For \code{openai_create_message}, a list containing the created message
object with details such as:
\itemize{
\item \code{id}: string. The identifier of the message.
\item \code{object}: string. The object type, always \code{"thread.message"}.
\item \code{created_at}: integer. The Unix timestamp for when the message was created.
\item \code{thread_id}: string. The ID of the thread the message belongs to.
\item \code{role}: string. The entity that produced the message.
\item \code{content}: array. The content of the message.
\item \code{attachments}: array or \code{NULL}. Files attached to the message.
\item \code{metadata}: map. Key-value pairs attached to the message.
}

For \code{openai_list_messages}, a list of message objects in the thread, each
with details such as:
\itemize{
\item \code{id}: string. The identifier of the message.
\item \code{content}: array. The content of the message.
\item \code{created_at}: integer. The Unix timestamp for when the message was created.
}

For \code{openai_get_message}, the details of the retrieved message object.

For \code{openai_modify_message}, the details of the modified message object.

For \code{openai_delete_message}, a list with the deletion status, including:
\itemize{
\item \code{id}: string. The identifier of the deleted message.
\item \code{object}: string. The object type, \code{"thread.message.deleted"}.
\item \code{deleted}: logical. Whether the message was successfully deleted.
}
}
\description{
These functions interact with the OpenAI \href{https://platform.openai.com/docs/api-reference/messages}{Messages API}. See the
documentation there for more.
}
\seealso{
Other openai: 
\code{\link{openai_batch_job}()},
\code{\link{openai_cancel_batch}()},
\code{\link{openai_check_batch_status}()},
\code{\link{openai_create_assistant}()},
\code{\link{openai_create_run}()},
\code{\link{openai_create_thread}()},
\code{\link{openai_create_vector_store}()},
\code{\link{openai_create_vector_store_file}()},
\code{\link{openai_create_vector_store_file_batch}()},
\code{\link{openai_download_batch_results}()},
\code{\link{openai_list_batches}()},
\code{\link{openai_list_run_steps}()},
\code{\link{openai_poll_and_download}()},
\code{\link{openai_submit_tool_outputs}()},
\code{\link{openai_upload_file}()}

Other threads: 
\code{\link{openai_create_thread}()}
}
\concept{messages}
\concept{openai}
\concept{threads}
