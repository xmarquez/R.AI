% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ollama-api.R
\name{ollama-api}
\alias{ollama-api}
\alias{ollama_show_model}
\alias{ollama_pull_model}
\alias{ollama_push_model}
\alias{ollama_create_model}
\alias{ollama_delete_model}
\alias{ollama_copy_model}
\alias{ollama_list_running_models}
\title{Ollama API Functions}
\usage{
ollama_show_model(model, verbose = FALSE, ...)

ollama_pull_model(model, insecure = FALSE, stream = FALSE, ...)

ollama_push_model(model, insecure = FALSE, stream = FALSE, ...)

ollama_create_model(
  model,
  modelfile = NULL,
  path = NULL,
  quantize = NULL,
  stream = TRUE,
  ...
)

ollama_delete_model(model, ...)

ollama_copy_model(source, destination, ...)

ollama_list_running_models(...)
}
\arguments{
\item{model}{A string specifying the model name.}

\item{verbose}{Logical; if \code{TRUE}, returns verbose response fields. Default
is \code{FALSE}.}

\item{...}{Other parameters passed to \code{\link[httr:POST]{httr::POST()}} or \code{\link[httr:GET]{httr::GET()}}.}

\item{insecure}{Logical; if \code{TRUE}, allows insecure connections. Default is
\code{FALSE}.}

\item{stream}{Logical; if \code{TRUE}, enables streaming responses. Default is
\code{FALSE}.}

\item{modelfile}{Character string or NULL; content of the Modelfile for model
creation.}

\item{path}{Character string or NULL; file path for the Modelfile.}

\item{quantize}{Character string or NULL; quantization type for the model.}

\item{source}{A string specifying the source model for copy operations.}

\item{destination}{A string specifying the destination model for copy
operations.}
}
\value{
The parsed content of the API response.
}
\description{
Functions to interact with the Ollama API for managing models.
These functions allow you to show information, pull, push, create, delete,
and copy models, as well as list running models.
}
\details{
For full details on each endpoint, refer to the Ollama API
documentation at \url{https://github.com/ollama/ollama/blob/main/docs/api.md}.
}
\section{Model Format}{
 Model names follow a \code{model:tag} format, where \code{model}
can include an optional namespace. Examples: \verb{orca-mini:3b-q4_1},
\verb{llama3:70b}. The tag defaults to \code{latest} if not provided.
}

\examples{
\dontrun{
# Show model information
res <- ollama_show_model("llama3.2")

# Create a new model
res <- ollama_create_model("new-model", modelfile = "FROM llama3")

# List running models
res <- ollama_list_running_models()
}
}
