% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api-batch.R
\name{poll_and_download}
\alias{poll_and_download}
\title{Poll and Download the Results of a Message Batch}
\usage{
poll_and_download(batch_response, timeout = 3600, ...)
}
\arguments{
\item{batch_response}{A \code{list} containing details about the batch. The class
of this object determines the API used:
\itemize{
\item \code{"batch_claude"}: Uses the Claude API (\href{https://docs.anthropic.com/en/api/message-batches-beta}{Anthropic}).
\item \code{"batch_openai"}: Uses the OpenAI API (\href{https://platform.openai.com/docs/api-reference/batch}{OpenAI}).
\item \code{"batch_mistral"}: Uses the Mistral API (\href{https://docs.mistral.ai/capabilities/batch/}{Mistral}).
}}

\item{timeout}{An integer specifying the maximum time (in seconds) to wait
for the batch to complete. Defaults to \code{3600} (1 hour).}

\item{...}{Additional parameters passed to API-specific methods, including:
\itemize{
\item \strong{\code{max_retries}}: An integer specifying the maximum number of retry attempts for status checks or download failures. Defaults to \code{3}.
\item \strong{\code{pause_cap}}: A numeric value representing the maximum pause duration (in seconds) between retries. Defaults to \code{1200}.
\item \strong{\code{quiet}}: A logical value indicating whether to suppress log messages during polling and downloading. Defaults to \code{FALSE}.
\item \strong{\code{tidy}}: A logical value indicating whether to return the results in a tidy format (e.g., a \code{data.frame}). Defaults to \code{TRUE}.
}}
}
\value{
A \code{list} or \code{data.frame} containing the results of the batch:
\itemize{
\item If \code{tidy = TRUE}, the results are returned in a structured format (e.g., a \code{data.frame} where each row corresponds to a prompt-completion pair).
\item If \code{tidy = FALSE}, the raw results are returned as received from the API.
}
}
\description{
This generic function repeatedly checks the status of a batch of requests
sent to a language model API, waiting for completion before downloading the
results. It dispatches the request to an API-specific implementation based on
the class of \code{batch_response}.
}
\details{
This function uses \code{UseMethod("poll_and_download")} to dispatch to
API-specific implementations.

The function repeatedly checks the status of the batch until it is
completed, canceled, or the timeout is reached. Once the batch is complete,
the results are downloaded.
}
\seealso{
\itemize{
\item \code{\link[=check_batch_status]{check_batch_status()}} for monitoring batch status.
\item \code{\link[=download_results]{download_results()}} for downloading batch results without polling.
}
}
