% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gemini.R
\name{gemini_single_request}
\alias{gemini_single_request}
\title{Send a Single Request to the Gemini API}
\usage{
gemini_single_request(
  prompt,
  model,
  max_retries = 10,
  temperature = 0.2,
  max_tokens = 300,
  system = NULL,
  content_extraction_fun,
  pause_cap = 1200,
  quiet = FALSE
)
}
\arguments{
\item{prompt}{A list of message objects or structured prompts, depending on
the Gemini API's requirements. Typically, you will generate this using
\code{\link[=prompt]{prompt()}}.}

\item{model}{A character string specifying the Gemini model to use for
content generation.}

\item{max_retries}{An integer specifying the maximum number of retry attempts
in case of request failures. Defaults to 10.}

\item{temperature}{A numeric value between 0 and 1 controlling the randomness
of the model's output (higher values produce more random responses).
Defaults to 0.2.}

\item{max_tokens}{An integer specifying the maximum number of tokens in the
generated output.}

\item{system}{An optional string to provide system-level instructions or
context for the model. If not provided, the function will attempt to
extract it from the attribute \code{system} in \code{prompt} (if it exists);
otherwise it will default to \code{NULL}.}

\item{content_extraction_fun}{A function for extracting content from the API
response. This function should accept the API response as input and return
the extracted content.}

\item{pause_cap}{A numeric value representing the maximum pause duration (in
seconds) between retries. Defaults to 1200 seconds.}

\item{quiet}{A logical value indicating whether to suppress log messages
during retries. Defaults to \code{FALSE}.}
}
\value{
A tibble containing:
\itemize{
\item \strong{Usage statistics}: Extracted using the internal \code{gemini_usage} function.
\item \strong{Generated response content}: Extracted using the provided \code{content_extraction_fun}.
}
}
\description{
This function sends a single request to the Gemini API for content
generation. It handles retries, validates the response, and extracts the
desired content, returning the results as a tibble.
}
\details{
This function constructs a POST request with the given \code{prompt} and
model configuration, retries in case of transient errors, validates the API
response, and extracts the desired content. The \code{content_extraction_fun}
function is used to parse the generated content, and the results are
returned in a structured tibble.
}
\examples{
\dontrun{
# Define a content extraction function
extract_content <- function(response) {
  response$candidates[[1]]$content$parts[[1]]$text
}

# Send a single request to the Gemini API
response_df <- gemini_single_request(
  prompt = prompt("What are the benefits of regular exercise?", api = "gemini"),
  model = "gemini-1.5-flash-latest",
  max_retries = 3,
  temperature = 0.7,
  max_tokens = 150,
  system = NULL,
  content_extraction_fun = extract_content,
  pause_cap = 60,
  quiet = FALSE
)

print(response_df)
}

}
