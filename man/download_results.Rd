% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/api-batch.R
\name{download_results}
\alias{download_results}
\title{Download the Results of a Message Batch}
\usage{
download_results(batch_response, ...)
}
\arguments{
\item{batch_response}{A \code{list} containing details about the batch. The class
of this object determines the API used:
\itemize{
\item \code{"batch_claude"}: Uses the Claude API (\href{https://docs.anthropic.com/en/api/message-batches-beta}{Anthropic}).
\item \code{"batch_openai"}: Uses the OpenAI API (\href{https://platform.openai.com/docs/api-reference/batch}{OpenAI}).
\item \code{"batch_mistral"}: Uses the Mistral API (\href{https://docs.mistral.ai/capabilities/batch/}{Mistral}).
}}

\item{...}{Other parameters passed to API-specific methods, including:
\itemize{
\item \strong{\code{max_retries}}: An integer specifying the maximum number of retry attempts in case of request failures. Defaults to \code{3}.
\item \strong{\code{pause_cap}}: A numeric value representing the maximum pause duration (in seconds) between retries. Defaults to \code{1200}.
\item \strong{\code{quiet}}: A logical value indicating whether to suppress log messages during retries. Defaults to \code{FALSE}.
\item \strong{\code{tidy}}: A logical value indicating whether to return the results in a tidy format. Defaults to \code{TRUE}.
}}
}
\value{
The structure of the returned object depends on the API and the \code{tidy} parameter:
\itemize{
\item If \code{tidy = TRUE}, the results are returned in a structured format (e.g., a \code{data.frame} or list, depending on the API).
\item If \code{tidy = FALSE}, the raw results are returned as they are received from the API.
}
}
\description{
This generic function retrieves the output of a completed batch of requests
from a language model API. It dispatches the request to an API-specific
implementation based on the class of the \code{batch_response}.
}
\details{
The format of the downloaded results depends on the API:
\itemize{
\item Claude: Results are typically provided as structured completions for each prompt.
\item OpenAI: Results are formatted according to the OpenAI API's completion endpoints.
\item Mistral: Results include completions and associated metadata, formatted as JSON or other supported types.
}
}
\seealso{
\itemize{
\item \code{\link[=check_batch_status]{check_batch_status()}} for verifying the status of a batch before downloading results.
\item API-specific download functions:
\itemize{
\item \code{\link[=claude_download_batch_results]{claude_download_batch_results()}}
\item \code{\link[=openai_download_batch_results]{openai_download_batch_results()}}
\item \code{\link[=mistral_download_batch_results]{mistral_download_batch_results()}}
}
}
}
