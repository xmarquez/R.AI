% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rag-assistant.R
\name{ask_assistant}
\alias{ask_assistant}
\title{Interact with an OpenAI Assistant}
\usage{
ask_assistant(
  messages,
  assistant,
  thread,
  instructions,
  timeout = 5,
  include_rag_results = TRUE,
  quiet = FALSE
)
}
\arguments{
\item{messages}{Character or list. Required. A single message string or a
list of messages to send to the assistant. If a list, each message should
be a list with \code{role} (e.g., \code{"user"}) and \code{content}; you can create these
messages with \code{\link[=prompt_list]{prompt_list()}}.}

\item{assistant}{An \code{openai_assistant} object. Required. The assistant to
interact with, typically created by \code{\link[=rag_assistant]{rag_assistant()}}.}

\item{thread}{Character or list. Optional. The ID of an existing thread, or a
prior \code{assistant_response} object from which a thread id can be extracted.
If missing, a new thread is created.}

\item{instructions}{Character. Optional. Instructions (system prompt) for the
assistant for this interaction. Defaults to the assistant's standard
instructions.}

\item{timeout}{Numeric. Optional. Time in seconds to wait between polling
requests for run completion. Defaults to \code{5}.}

\item{include_rag_results}{Logical. Optional. If \code{TRUE}, includes results
from RAG tool calls in the output. Defaults to \code{TRUE}.}

\item{quiet}{Logical. Optional. If \code{TRUE}, suppresses CLI output. Defaults to
\code{FALSE}.}
}
\value{
A list with the following elements:
\itemize{
\item \code{response}: Formatted assistant response.
\item \code{rag_results}: RAG search results, if included.
\item \code{thread_id}: ID of the thread used for the interaction. You can extract further details from the thread by using \code{\link[=openai_get_thread]{openai_get_thread()}}.
\item \code{run_id}: ID of the run for this interaction. You can extract further details from the thread by using \code{\link[=openai_get_run]{openai_get_run()}}.
}
}
\description{
Sends a query or conversation to a previously created assistant and retrieves
its response, optionally including Retrieval-Augmented Generation (RAG)
search results.
}
\examples{
\dontrun{
# Send a query to the assistant
response <- ask_assistant(
  messages = "What was the significance of Wang Dongxing during the Cultural Revolution?",
  assistant = my_assistant
)
cat(response$response)
}
}
